1) Create a sample website using docker container

	1. docker run -p 8080:80 nginx:latest
	2. docker run -d -p 8080:80 nginx:latest
	3. docker cp index.html d8d25420a51b:/usr/share/nginx/html/
	4. docker commit d8d25420a51b cad/web:version1
	5. docker tag cad/web:version1 us.gcr.io/bjn-project/cad-site:version1
	6. docker push us.gcr.io/bjn-project/cad-site:version1


	 gcloud config set project bjn-project
	 gcloud config set compute/zone us-central1-a


2) gcloud container clusters create bj-cluster --num-nodes=1

3) gcloud container clusters get-credentials bj-cluster

4) kubectl create deployment web-server --image=us.gcr.io/bjn-project/cad-site:version1

5) kubectl expose deployment web-server --type LoadBalancer --port 80 --target-port 80


    1. kubectl get pods

    2. kubectl get service
	
	3. kubectl cluster-info
	
	4. kubectl top nodes
	
	5. kubectl run nginx-1 --image nginx:latest
	
	6. kubectl get pods
	
	7. kubectl describe pod nginx-1
	
---------------------------------------------------------------------------------------------	
1) Create Private cluster

	gcloud container clusters create private-cluster-1 \
  	--create-subnetwork name=my-subnet-1 \
  	--enable-master-authorized-networks \
  	--enable-ip-alias \
   	--enable-private-nodes \
   	--master-ipv4-cidr 172.16.0.0/28
	--num-nodes=1
	
2) Add my public ip on [Control plane authorised networks]

3) Check

4) Delete cluster
	
	gcloud container clusters delete private-cluster-1